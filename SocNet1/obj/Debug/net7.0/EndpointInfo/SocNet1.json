{
  "openapi": "3.0.1",
  "info": {
    "title": "API for social network",
    "description": "API that making for using in social network",
    "contact": {
      "name": "example of contact",
      "url": "https://example.com/contact"
    },
    "license": {
      "name": "example of license",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Block": {
      "post": {
        "tags": [
          "Block"
        ],
        "summary": "Создание нового заблокированного пользователя",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"blocker_id\": \"1\"\r\n    \"blocked_id\": \"15\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlocksRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlocksRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlocksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Block"
        ],
        "summary": "Обноалвение данных о заблокированных пользователях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockedUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockedUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockedUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Block"
        ],
        "summary": "Удаление заблокированных пользователей",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Comment": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Создание нового комментария",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"post_id\": \"34\"\r\n    \"user_id\": \"1\"\r\n    \"content\": \"Даа, согласен, звучит потрясающе!!!\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Обновление данных о комментарии",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Удаление данных о комментариях",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Event": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Создание нового ивента",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    name\": \"Вечеринка в честь дня рождения\",\r\n    \"description\": \"Приглашаем всех на вечеринку в честь дня рождения!\",\r\n    \"location\": \"Москва, ул. Ленина, д. 10\",\r\n    \"start_time\": \"2023-10-15T18:00:00\",\r\n    \"end_time\": \"2023-10-15T23:00:00\",\r\n    \"created_by\": \"5\",\r\n    \"created_at\": \"2023-10-05T14:30:45.123456\",\r\n    \"updated_at\": \"2023-10-05T14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "обновление данных о событиях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Удаление данных о событии",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Eventattendee": {
      "post": {
        "tags": [
          "Eventattendee"
        ],
        "summary": "Создание нового посетителя ивента",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"event_id\": \"1\"\r\n    \"user_id\": \"2\"\r\n    \"status\": \"приглашен\"\r\n    \"joined_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAttendeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAttendeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAttendeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Eventattendee"
        ],
        "summary": "Обновление данных о участниках мероприятия",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAttendee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAttendee"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventAttendee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Eventattendee"
        ],
        "summary": "Удаление данных о участниках мероприятия",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Friend": {
      "post": {
        "tags": [
          "Friend"
        ],
        "summary": "Создание нового друга",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"requester_id\": \"3\"\r\n    \"receiver_id\": \"1\"\r\n    \"status\": \"Друзья\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Friend"
        ],
        "summary": "Обновление данных о друзьях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Friend"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Friend"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Friend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Friend"
        ],
        "summary": "Удаление данных о друзьях1",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Group": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Создание новой группы",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"name\": \"Coockies\"\r\n    \"description\": \"Группа, созданная программистами для программистов\"\r\n    \"created_by\": \"1\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Обновление данных о новых группах",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Удаление данных о группах",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/GroupMember": {
      "post": {
        "tags": [
          "GroupMember"
        ],
        "summary": "Создание нового участника группы",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"group_id\": \"90\"\r\n    \"user_id\": \"2\"\r\n    \"role\": \"администратор\"\r\n    \"joined_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupMembersRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupMembersRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupMembersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "GroupMember"
        ],
        "summary": "Обновление данных об участниках группы",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMember"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMember"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMember"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "GroupMember"
        ],
        "summary": "Удаление данных об участниках группы",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Like": {
      "get": {
        "tags": [
          "Like"
        ],
        "summary": "Создание нового понравившегося поста",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"post_id\": \"23\"\r\n    \"user_id\": \"1\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Like"
        ],
        "summary": "Добавление данных лайков",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLikesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLikesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLikesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Like"
        ],
        "summary": "Обновление данных о лайках",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Like"
        ],
        "summary": "Удаление данных о лайках",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Like/{id}": {
      "get": {
        "tags": [
          "Like"
        ],
        "summary": "Получение id лайков",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Massege": {
      "post": {
        "tags": [
          "Massege"
        ],
        "summary": "Создание нового сообщения",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"sender_id\": \"1\"\r\n    \"receiver_id\": \"2\"\r\n    \"content\": \"Привеет! Куда пропал?\"\r\n    \"read_status\": \"1\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Massege"
        ],
        "summary": "Обновление данных о сообщениях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Massege"
        ],
        "summary": "удаление данных о сообщении",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Massege/{id}": {
      "get": {
        "tags": [
          "Massege"
        ],
        "summary": "Получение id собщения",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Создание нового оповещения",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"user_id\": \"1\"\r\n    \"message\": \"Привет! Как дела?\"\r\n    \"type\": \"Новое сообщение\"\r\n    \"is_read\": \"0\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Добавление данных об оповещениях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Обновление данных об оповещених",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Удаление данных об оповещении",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "получение id оповещения",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Post": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "получение всех данных о постах",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Создание нового поста",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"user_id\": \"1\"\r\n    \"[content]\": \"В данном посте мы разберемся кто такой архитектор ПО и из чего состоит его работа...\"\r\n    \"image_url\": \"ссылка на фото внутри файловой системы\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"Updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Обновление данных постов",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Удаление данных постов",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Post/{id}": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "получени id поста",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "получение данных о всех тегах",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Создание нового тега",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"name\": \"#DogsAndCats\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "обновление данных о тегах",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Удаление данных о тегах",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "получение if тега",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TagPost": {
      "get": {
        "tags": [
          "TagPost"
        ],
        "summary": "Полученние всех данных о тегах постов",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "TagPost"
        ],
        "summary": "Создание нового тега у поста",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"post_id\": \"1\"\r\n    \"tag_id\": \"1\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostTagsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "TagPost"
        ],
        "summary": "обновление данных о тегах постов",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostTag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "TagPost"
        ],
        "summary": "удаление данных о тегах постов",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TagPost/{id}": {
      "get": {
        "tags": [
          "TagPost"
        ],
        "summary": "получение id тега",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User1": {
      "get": {
        "tags": [
          "User1"
        ],
        "summary": "Полученние всех данных",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "User1"
        ],
        "summary": "Создание нового пользователя",
        "description": "Пример запроса:\r\n    POST /Todo\r\n    {\r\n    \"username\": \"AnnPiano\"\r\n    \"email\": \"AnnaS8694@gmail.com\"\r\n    \"password_hash\": \"Anka839(Df)\"\r\n    \"first_name\": \"Анна\"\r\n    \"last_name\": \"Салтова\"\r\n    \"birthdate\": \"28.04.2000\"\r\n    \"gender\": \"Женский\"\r\n    \"profile_picture\": \"ссылка на фото в фаловой системе\"\r\n    \"bio\": \"Привет, меня зовут Анна, я профессиональная пианистка\"\r\n    \"created_at\": \"2023-10-05 14:30:45.123456\"\r\n    \"Updated_at\": \"2023-10-05 14:30:45.123456\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "User1"
        ],
        "summary": "Обновление данных о пользователях",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User1"
        ],
        "summary": "удаление данных о пользователе",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User1/{id}": {
      "get": {
        "tags": [
          "User1"
        ],
        "summary": "ПОлучение id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BlockedUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "blockerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "blockedId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blocked": {
            "$ref": "#/components/schemas/User"
          },
          "blocker": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "postId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "CreateBlocksRequest": {
        "type": "object",
        "properties": {
          "blocker_id": {
            "type": "integer",
            "format": "int32"
          },
          "blocked_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateCommentsRequest": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateEventAttendeeRequest": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "joined_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateEventsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateFriendsRequest": {
        "type": "object",
        "properties": {
          "requester_id": {
            "type": "integer",
            "format": "int32"
          },
          "receiver_id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateGroupMembersRequest": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "joined_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateLikesRequest": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateMessageRequest": {
        "type": "object",
        "properties": {
          "sender_id": {
            "type": "integer",
            "format": "int32"
          },
          "receiver_id": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "read_status": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationsRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "is_read": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreatePostTagsRequest": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "integer",
            "format": "int32"
          },
          "tag_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password_hash": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "profile_picture": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByNavigation": {
            "$ref": "#/components/schemas/User"
          },
          "eventAttendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendee"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventAttendee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Friend": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "requesterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receiverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receiver": {
            "$ref": "#/components/schemas/User"
          },
          "requester": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByNavigation": {
            "$ref": "#/components/schemas/User"
          },
          "groupMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMember"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Like": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "postId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "senderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receiverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "readStatus": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receiver": {
            "$ref": "#/components/schemas/User"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "nullable": true
          },
          "likes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Like"
            },
            "nullable": true
          },
          "postTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostTag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "postId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tagId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "additionalProperties": false
      },
      "PrivacySetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileVisibility": {
            "type": "string",
            "nullable": true
          },
          "postVisibility": {
            "type": "string",
            "nullable": true
          },
          "friendRequests": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "postTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostTag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "privacySetting": {
            "$ref": "#/components/schemas/PrivacySetting"
          },
          "blockedUserBlockeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockedUser"
            },
            "nullable": true
          },
          "blockedUserBlockers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockedUser"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "nullable": true
          },
          "eventAttendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendee"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "nullable": true
          },
          "friendReceivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Friend"
            },
            "nullable": true
          },
          "friendRequesters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Friend"
            },
            "nullable": true
          },
          "groupMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMember"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "nullable": true
          },
          "likes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Like"
            },
            "nullable": true
          },
          "messageReceivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          },
          "messageSenders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "nullable": true
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}