<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SocNet1</name>
    </assembly>
    <members>
        <member name="M:SocNet1.Controllers.BlockController.Add(SocNet1.Contracts.CreateBlocksRequest)">
            <summary>
            Создание нового заблокированного пользователя
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "blocker_id": "1"
                "blocked_id": "15"
                "created_at": "2023-10-05 14:30:45.123456"
                "updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.BlockController.Update(Domain.Models.BlockedUser)">
            <summary>
            Обноалвение данных о заблокированных пользователях
            </summary>
            <param name="bl"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.BlockController.Delete(System.Int32)">
            <summary>
            Удаление заблокированных пользователей
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.EventController.Add(SocNet1.Contracts.CreateEventsRequest)">
            <summary>
            Создание нового ивента
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                name": "Вечеринка в честь дня рождения",
                "description": "Приглашаем всех на вечеринку в честь дня рождения!",
                "location": "Москва, ул. Ленина, д. 10",
                "start_time": "2023-10-15T18:00:00",
                "end_time": "2023-10-15T23:00:00",
                "created_by": "5",
                "created_at": "2023-10-05T14:30:45.123456",
                "updated_at": "2023-10-05T14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.EventController.Update(Domain.Models.Event)">
            <summary>
            обновление данных о событиях
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.EventController.Delete(System.Int32)">
            <summary>
            Удаление данных о событии
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.FriendController.Add(SocNet1.Contracts.CreateFriendsRequest)">
            <summary>
            Создание нового друга
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "requester_id": "3"
                "receiver_id": "1"
                "status": "Друзья"
                "created_at": "2023-10-05 14:30:45.123456"
                "updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.FriendController.Update(Domain.Models.Friend)">
            <summary>
            Обновление данных о друзьях
            </summary>
            <param name="friendss"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.FriendController.Delete(System.Int32)">
            <summary>
            Удаление данных о друзьях1
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.GroupMemberController.Add(SocNet1.Contracts.CreateGroupMembersRequest)">
            <summary>
            Создание нового участника группы
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "group_id": "90"
                "user_id": "2"
                "role": "администратор"
                "joined_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.GroupMemberController.Update(Domain.Models.GroupMember)">
            <summary>
            Обновление данных об участниках группы
            </summary>
            <param name="Gm"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.GroupMemberController.Delete(System.Int32)">
            <summary>
            Удаление данных об участниках группы
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.LikeController.GetAll">
            <summary>
            Создание нового понравившегося поста
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "post_id": "23"
                "user_id": "1"
                "created_at": "2023-10-05 14:30:45.123456"
                }
                
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.LikeController.GetById(System.Int32)">
            <summary>
            Получение id лайков
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.LikeController.Add(SocNet1.Contracts.CreateLikesRequest)">
            <summary>
            Добавление данных лайков
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.LikeController.Update(Domain.Models.Like)">
            <summary>
            Обновление данных о лайках
            </summary>
            <param name="likeDto"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.LikeController.Delete(System.Int32)">
            <summary>
            Удаление данных о лайках
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.MassegeController.Add(SocNet1.Contracts.CreateMessageRequest)">
            <summary>
            Создание нового сообщения
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "sender_id": "1"
                "receiver_id": "2"
                "content": "Привеет! Куда пропал?"
                "read_status": "1"
                "created_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.MassegeController.GetById(System.Int32)">
            <summary>
            Получение id собщения
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.MassegeController.Update(Domain.Models.Message)">
            <summary>
            Обновление данных о сообщениях
            </summary>
            <param name="Gm"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.MassegeController.Delete(System.Int32)">
            <summary>
            удаление данных о сообщении
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.NotificationController.GetAll">
            <summary>
            Создание нового оповещения
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "user_id": "1"
                "message": "Привет! Как дела?"
                "type": "Новое сообщение"
                "is_read": "0"
                "created_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.NotificationController.GetById(System.Int32)">
            <summary>
            получение id оповещения
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.NotificationController.Add(SocNet1.Contracts.CreateNotificationsRequest)">
            <summary>
            Добавление данных об оповещениях
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.NotificationController.Update(Domain.Models.Notification)">
            <summary>
            Обновление данных об оповещених
            </summary>
            <param name="notiDto"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.NotificationController.Delete(System.Int32)">
            <summary>
            Удаление данных об оповещении
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.PostController.GetAll">
            <summary>
            получение всех данных о постах
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.PostController.GetById(System.Int32)">
            <summary>
            получени id поста
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.PostController.Add(SocNet1.Contracts.CreatePostTagsRequest)">
            <summary>
            Создание нового поста
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "user_id": "1"
                "[content]": "В данном посте мы разберемся кто такой архитектор ПО и из чего состоит его работа..."
                "image_url": "ссылка на фото внутри файловой системы"
                "created_at": "2023-10-05 14:30:45.123456"
                "Updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.PostController.Update(Domain.Models.Post)">
            <summary>
            Обновление данных постов
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.PostController.Delete(System.Int32)">
            <summary>
            Удаление данных постов
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagController.GetAll">
            <summary>
            получение данных о всех тегах
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagController.GetById(System.Int32)">
            <summary>
            получение if тега
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagController.Add(SocNet1.Contracts.CreatePostTagsRequest)">
            <summary>
            Создание нового тега 
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "name": "#DogsAndCats"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagController.Update(Domain.Models.Tag)">
            <summary>
            обновление данных о тегах
            </summary>
            <param name="tg"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagController.Delete(System.Int32)">
            <summary>
            Удаление данных о тегах
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagPostController.GetAll">
            <summary>
            Полученние всех данных о тегах постов
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagPostController.GetById(System.Int32)">
            <summary>
            получение id тега
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagPostController.Add(SocNet1.Contracts.CreatePostTagsRequest)">
            <summary>
            Создание нового тега у поста
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "post_id": "1"
                "tag_id": "1"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagPostController.Update(Domain.Models.PostTag)">
            <summary>
            обновление данных о тегах постов
            </summary>
            <param name="posttg"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.TagPostController.Delete(System.Int32)">
            <summary>
            удаление данных о тегах постов
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.User1Controller.GetAll">
            <summary>
            Полученние всех данных
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.User1Controller.GetById(System.Int32)">
            <summary>
            ПОлучение id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.User1Controller.Add(SocNet1.Contracts.CreateUserRequest)">
            <summary>
            Создание нового пользователя
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "username": "AnnPiano"
                "email": "AnnaS8694@gmail.com"
                "password_hash": "Anka839(Df)"
                "first_name": "Анна"
                "last_name": "Салтова"
                "birthdate": "28.04.2000"
                "gender": "Женский"
                "profile_picture": "ссылка на фото в фаловой системе"
                "bio": "Привет, меня зовут Анна, я профессиональная пианистка"
                "created_at": "2023-10-05 14:30:45.123456"
                "Updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.User1Controller.Update(Domain.Models.User)">
            <summary>
            Обновление данных о пользователях
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet1.Controllers.User1Controller.Delete(System.Int32)">
            <summary>
            удаление данных о пользователе
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DataAccess.Controllers.CommentController.Add(SocNet1.Contracts.CreateCommentsRequest)">
            <summary>
            Создание нового комментария
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "post_id": "34"
                "user_id": "1"
                "content": "Даа, согласен, звучит потрясающе!!!"
                "created_at": "2023-10-05 14:30:45.123456"
                "updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:DataAccess.Controllers.CommentController.Update(Domain.Models.Comment)">
            <summary>
            Обновление данных о комментарии
            </summary>
            <param name="com"></param>
            <returns></returns>
        </member>
        <member name="M:DataAccess.Controllers.CommentController.Delete(System.Int32)">
            <summary>
            Удаление данных о комментариях
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet.Controllers.EventattendeeController.Add(SocNet1.Contracts.CreateEventAttendeeRequest)">
            <summary>
            Создание нового посетителя ивента
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "event_id": "1"
                "user_id": "2"
                "status": "приглашен"
                "joined_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNet.Controllers.EventattendeeController.Update(Domain.Models.EventAttendee)">
            <summary>
            Обновление данных о участниках мероприятия
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="M:SocNet.Controllers.EventattendeeController.Delete(System.Int32)">
            <summary>
            Удаление данных о участниках мероприятия
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SocNetq.Controllers.GroupController.Add(SocNet1.Contracts.CreateGroupRequest)">
            <summary>
            Создание новой группы
            </summary>
            <remarks>
            Пример запроса:
                POST /Todo
                {
                "name": "Coockies"
                "description": "Группа, созданная программистами для программистов"
                "created_by": "1"
                "created_at": "2023-10-05 14:30:45.123456"
                "updated_at": "2023-10-05 14:30:45.123456"
                }
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SocNetq.Controllers.GroupController.Update(Domain.Models.Group)">
            <summary>
            Обновление данных о новых группах
            </summary>
            <param name="G"></param>
            <returns></returns>
        </member>
        <member name="M:SocNetq.Controllers.GroupController.Delete(System.Int32)">
            <summary>
            Удаление данных о группах
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
